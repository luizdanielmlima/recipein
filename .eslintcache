[{"C:\\WebDev\\MyProjects\\recipein\\src\\reportWebVitals.js":"1","C:\\WebDev\\MyProjects\\recipein\\src\\theme.js":"2","C:\\WebDev\\MyProjects\\recipein\\src\\index.js":"3","C:\\WebDev\\MyProjects\\recipein\\src\\store\\store.js":"4","C:\\WebDev\\MyProjects\\recipein\\src\\store\\dummyData.js":"5","C:\\WebDev\\MyProjects\\recipein\\src\\containers\\Recipes\\Recipes.jsx":"6","C:\\WebDev\\MyProjects\\recipein\\src\\containers\\Recipe\\Recipe.jsx":"7","C:\\WebDev\\MyProjects\\recipein\\src\\containers\\EditRecipe\\EditRecipe.jsx":"8","C:\\WebDev\\MyProjects\\recipein\\src\\components\\SaveButton\\SaveButton.jsx":"9","C:\\WebDev\\MyProjects\\recipein\\src\\components\\SpinnerButton\\SpinnerButton.jsx":"10","C:\\WebDev\\MyProjects\\recipein\\src\\components\\FavButton\\FavButton.jsx":"11","C:\\WebDev\\MyProjects\\recipein\\src\\components\\Instructions\\Instructions.jsx":"12","C:\\WebDev\\MyProjects\\recipein\\src\\components\\Ingredients\\Ingredients.jsx":"13","C:\\WebDev\\MyProjects\\recipein\\src\\components\\RecipeItem\\RecipeItem.jsx":"14","C:\\WebDev\\MyProjects\\recipein\\src\\App.jsx":"15","C:\\WebDev\\MyProjects\\recipein\\src\\store\\hca_recipes.js":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":3096,"mtime":1613248655891,"results":"19","hashOfConfig":"18"},{"size":723,"mtime":1606501301946,"results":"20","hashOfConfig":"18"},{"size":678,"mtime":1606916077565,"results":"21","hashOfConfig":"18"},{"size":6311,"mtime":1606830566243,"results":"22","hashOfConfig":"18"},{"size":3308,"mtime":1617974577661,"results":"23","hashOfConfig":"18"},{"size":4473,"mtime":1617909667009,"results":"24","hashOfConfig":"18"},{"size":6572,"mtime":1613249435460,"results":"25","hashOfConfig":"18"},{"size":1667,"mtime":1612125100500,"results":"26","hashOfConfig":"18"},{"size":3610,"mtime":1612871793908,"results":"27","hashOfConfig":"18"},{"size":1582,"mtime":1612122341949,"results":"28","hashOfConfig":"18"},{"size":1356,"mtime":1613248623684,"results":"29","hashOfConfig":"18"},{"size":1347,"mtime":1617909744112,"results":"30","hashOfConfig":"18"},{"size":2244,"mtime":1617909410862,"results":"31","hashOfConfig":"18"},{"size":907,"mtime":1612866578882,"results":"32","hashOfConfig":"18"},{"size":150290,"mtime":1617910444304,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18qat25",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WebDev\\MyProjects\\recipein\\src\\reportWebVitals.js",[],"C:\\WebDev\\MyProjects\\recipein\\src\\theme.js",["69","70","71","72"],"C:\\WebDev\\MyProjects\\recipein\\src\\index.js",[],["73","74"],"C:\\WebDev\\MyProjects\\recipein\\src\\store\\store.js",[],"C:\\WebDev\\MyProjects\\recipein\\src\\store\\dummyData.js",[],"C:\\WebDev\\MyProjects\\recipein\\src\\containers\\Recipes\\Recipes.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\containers\\Recipe\\Recipe.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\containers\\EditRecipe\\EditRecipe.jsx",["75","76","77"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport classes from './EditRecipe.module.css';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport SpinnerButton from '../../components/SpinnerButton/SpinnerButton';\r\n\r\nconst EditRecipe = () => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const [activeTab, setActiveTab] = useState('info');\r\n  const [title, setTitle] = React.useState('');\r\n  const [prepTime, setPrepTime] = React.useState(30);\r\n  const [prepUnit, setPrepUnit] = React.useState('min');\r\n  const [category, setCategory] = React.useState('dessert');\r\n\r\n  // Btn stuff\r\n  const [btnStatus, setBtnStatus] = React.useState();\r\n  const [btnType, setBtnType] = React.useState('save');\r\n  const timerLoading = useRef();\r\n  const timerStatus = useRef();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerLoading.current);\r\n      clearTimeout(timerStatus.current);\r\n    };\r\n  }, []);\r\n\r\n  const handleButtonClick = () => {\r\n    setBtnStatus('waiting');\r\n    timerLoading.current = window.setTimeout(() => {\r\n      setBtnStatus('error');\r\n      timerStatus.current = window.setTimeout(() => {\r\n        setBtnStatus('iddle');\r\n      }, 2000);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handlePrepTimeChange = (event) => {\r\n    setPrepTime(event.target.value);\r\n  };\r\n\r\n  const handlePrepUnitChange = (event) => {\r\n    setPrepUnit(event.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    console.log('category: ', event.target.value);\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const activeTabStyle = {\r\n    color: `${theme.palette.text.primary}`,\r\n    fontWeight: '500',\r\n  };\r\n  const inactiveTabStyle = {\r\n    color: `${theme.palette.text.disabled}`,\r\n  };\r\n\r\n  const handleTabSelect = (id) => {\r\n    setActiveTab(id);\r\n  };\r\n\r\n  let tabContent;\r\n  if (activeTab === 'info') {\r\n    tabContent = (\r\n      <form noValidate autoComplete=\"off\" className={classes.form}>\r\n        <FormControl className={classes.formItem}>\r\n          <InputLabel htmlFor=\"title\">Title</InputLabel>\r\n          <Input\r\n            fullWidth\r\n            id=\"title\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n            placeholder=\"Recipe title here\"\r\n            aria-describedby=\"recipe title input\"\r\n          />\r\n        </FormControl>\r\n        <div className={classes.formItemRow}>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"preTimeInput\">Prep.Time</InputLabel>\r\n            <Input\r\n              id=\"preTimeInput\"\r\n              size=\"small\"\r\n              type=\"number\"\r\n              value={prepTime}\r\n              onChange={handlePrepTimeChange}\r\n              aria-describedby=\"prep. time input\"\r\n              style={{ marginRight: '16px', maxWidth: '80px' }}\r\n            />\r\n          </FormControl>\r\n          <Select\r\n            labelId=\"prepUnitLabel\"\r\n            id=\"prepUnit\"\r\n            value={prepUnit}\r\n            onChange={handlePrepUnitChange}\r\n            aria-describedby=\"prep.time unit input\"\r\n          >\r\n            <MenuItem value={'min'}>min</MenuItem>\r\n            <MenuItem value={'hour'}>h</MenuItem>\r\n          </Select>\r\n        </div>\r\n        <FormControl className={classes.formItem}>\r\n          <InputLabel htmlFor=\"preTimeInput\">Category</InputLabel>\r\n          <Select\r\n            labelId=\"prepUnitLabel\"\r\n            id=\"prepUnit\"\r\n            value={category}\r\n            onChange={handleCategoryChange}\r\n            aria-describedby=\"recipe category input\"\r\n          >\r\n            {/* TO-DO: put categories outside this file */}\r\n            <MenuItem value={'dessert'}>dessert</MenuItem>\r\n            <MenuItem value={'cake'}>cake</MenuItem>\r\n            <MenuItem value={'dinner'}>dinner</MenuItem>\r\n            <MenuItem value={'lunch'}>lunch</MenuItem>\r\n            <MenuItem value={'snack'}>snack</MenuItem>\r\n            <MenuItem value={'bread'}>bread</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  } else if (activeTab === 'ingredients') {\r\n    tabContent = <p>ingredients form here</p>;\r\n  } else if (activeTab === 'instructions') {\r\n    tabContent = <p>instructions form here</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper className={classes.main}>\r\n        <header className={classes.header}>\r\n          <IconButton\r\n            aria-label=\"back button\"\r\n            className={classes.backBtn}\r\n            size=\"medium\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h2\" style={{ color: '#fff' }}>\r\n            Edit/Create Recipe\r\n          </Typography>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <ButtonGroup\r\n            variant=\"text\"\r\n            className={classes.btnGroup}\r\n            aria-label=\"ingredients instructions btn\"\r\n          >\r\n            <Button\r\n              style={\r\n                activeTab === 'info'\r\n                  ? activeTabStyle\r\n                  : inactiveTabStyle\r\n              }\r\n              onClick={() => handleTabSelect('info')}\r\n            >\r\n              Info\r\n            </Button>\r\n            <Button\r\n              style={\r\n                activeTab === 'ingredients'\r\n                  ? activeTabStyle\r\n                  : inactiveTabStyle\r\n              }\r\n              onClick={() => handleTabSelect('ingredients')}\r\n            >\r\n              Ingredients\r\n            </Button>\r\n            <Button\r\n              style={\r\n                activeTab === 'instructions'\r\n                  ? activeTabStyle\r\n                  : inactiveTabStyle\r\n              }\r\n              onClick={() => handleTabSelect('instructions')}\r\n            >\r\n              Instructions\r\n            </Button>\r\n          </ButtonGroup>\r\n          {tabContent}\r\n          <SpinnerButton\r\n            type={btnType}\r\n            status={btnStatus}\r\n            handleClick={handleButtonClick}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditRecipe;\r\n","C:\\WebDev\\MyProjects\\recipein\\src\\components\\SaveButton\\SaveButton.jsx",["78","79"],"C:\\WebDev\\MyProjects\\recipein\\src\\components\\SpinnerButton\\SpinnerButton.jsx",[],["80","81"],"C:\\WebDev\\MyProjects\\recipein\\src\\components\\FavButton\\FavButton.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\components\\Instructions\\Instructions.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\components\\Ingredients\\Ingredients.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\components\\RecipeItem\\RecipeItem.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\App.jsx",[],"C:\\WebDev\\MyProjects\\recipein\\src\\store\\hca_recipes.js",[],{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":15},{"ruleId":"82","severity":1,"message":"88","line":4,"column":17,"nodeType":"84","messageId":"85","endLine":4,"endColumn":21},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"82","severity":1,"message":"93","line":10,"column":3,"nodeType":"84","messageId":"85","endLine":10,"endColumn":17},{"ruleId":"82","severity":1,"message":"94","line":17,"column":3,"nodeType":"84","messageId":"85","endLine":17,"endColumn":12},{"ruleId":"82","severity":1,"message":"95","line":35,"column":19,"nodeType":"84","messageId":"85","endLine":35,"endColumn":29},{"ruleId":"82","severity":1,"message":"96","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":17},{"ruleId":"82","severity":1,"message":"97","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"89","replacedBy":"98"},{"ruleId":"91","replacedBy":"99"},"no-unused-vars","'orange' is defined but never used.","Identifier","unusedVar","'indigo' is defined but never used.","'amber' is defined but never used.","'blue' is defined but never used.","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'FormHelperText' is defined but never used.","'TextField' is defined but never used.","'setBtnType' is assigned a value but never used.","'CheckIcon' is defined but never used.","'SaveIcon' is defined but never used.",["100"],["101"],"no-global-assign","no-unsafe-negation"]